import asyncio
import aiohttp
from time import time
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from bot.config import BOT_TOKEN
from bot.utils import fetch_prices

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def start(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—ã")]],
        resize_keyboard=True
    )
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *CryptoSignal Bot*!\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã üëá",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

last_used = {}

@dp.message(lambda m: m.text == "–ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—ã")
async def handle_get_prices(message: types.Message):
    now = time()
    user_id = message.from_user.id

    if user_id in last_used and now - last_used[user_id] < 5:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        return
    last_used[user_id] = now


    await message.answer("–ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã...")

    session = aiohttp.ClientSession()
    try:
        await session.post("http://127.0.0.1:5000/api/coins/update")

        async with session.get("http://127.0.0.1:5000/api/coins") as response:
            coins = await response.json()
    finally:
        await session.close()

    if not coins:
        await message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return

    text = "\n".join([f"{c['symbol']}: ${c['price']}" for c in coins])
    await message.answer(f"Current prices:\n{text}")

async def main():
    await dp.start_polling(bot, handle_signals=False)

if __name__ == "__main__":
    asyncio.run(main())